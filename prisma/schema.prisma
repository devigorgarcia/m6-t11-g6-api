// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @unique @default(uuid())
  name        String
  password    String
  email       String    @unique
  cpf         String    @unique
  fone        String
  birthday    DateTime
  descripiton String
  is_admin    Boolean
  address     Address?
  vehicle     Vehicle[]
  Comment     Comment[]

  @@map("users")
}

model Address {
  id         String @id @unique @default(uuid())
  cep        String
  state      String
  city       String
  street     String
  number     Int
  complement String
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String @unique

  @@map("addresses")
}

model Vehicle {
  id          String    @id @unique @default(uuid())
  title       String
  year        Int
  km          Decimal
  price       Decimal
  description String
  isActive    Boolean   @default(true)
  isCar       Boolean
  frontImg    String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  Comment     Comment[]
  gallery     Gallery[]

  @@map("vehicles")
}

model Gallery {
  id        String  @id @unique @default(uuid())
  url       String
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  vehicleId String

  @@map("gallery")
}

model Comment {
  id        String   @unique @default(uuid())
  content   String
  createdAt String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  vehicleId String

  @@id([userId, vehicleId])
  @@map("comments")
}
